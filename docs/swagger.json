{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Starworks server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost",
    "basePath": "/v3",
    "paths": {
        "/api/user/login": {
            "get": {
                "description": "Login endpoint",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "If successful, 'data' will contain an instance of model.User. If an error occurs, 'data' will not be shown.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/wallet/check-balance": {
            "get": {
                "description": "Check Balance endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Check Balance",
                "parameters": [
                    {
                        "description": "Check Balance Request",
                        "name": "checkBalanceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CheckBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/wallet/pay": {
            "post": {
                "description": "Pay endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Pay",
                "parameters": [
                    {
                        "description": "Pay Request",
                        "name": "payRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        },
        "/api/wallet/top-up": {
            "post": {
                "description": "Top Up endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Top Up",
                "parameters": [
                    {
                        "description": "Top Up Request",
                        "name": "topUpRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TopUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.APIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "model.CheckBalanceRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UserPresenter"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.PayRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "nominal_payment": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.RegisterRequest": {
            "type": "object",
            "required": [
                "birth_date",
                "city",
                "email",
                "first_name",
                "last_name",
                "password",
                "phone",
                "province",
                "street_address",
                "username"
            ],
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "city": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 2
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "street_address": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 5
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.ResponseError": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "string"
                }
            }
        },
        "model.TopUpRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "nominal": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.UserPresenter": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "street_address": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}